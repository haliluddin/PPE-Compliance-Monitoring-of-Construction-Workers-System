PPE Compliance Monitoring System - Backend & Frontend Setup Documentation

## 1. Install PostgreSQL

1. Go to [PostgreSQL Downloads](https://www.postgresql.org/download/windows/) and install PostgreSQL.
2. During installation, set up credentials:

   * **Username:** `postgres`
   * **Password:** `ppe`
   * **Port:** `5432`
3. Open **pgAdmin**.
4. Connect to the server using the credentials above.
5. Create a database:

   * **Name:** `ppe_db`
   * Connection settings:

     * Host: `localhost`
     * Port: `5432`
     * Username: `postgres`
     * Password: `ppe`

---

2. Backend Setup (FastAPI)

1. Open terminal/PowerShell in the **backend folder**.

2. **Create a virtual environment** (if not already):

   python -m venv venv

3. **Activate the virtual environment**:

   .\venv\Scripts\activate


4. **Install required Python dependencies**:

   pip install -r requirements.txt

   *(requirements.txt is provided below and in app folder)*

5. **Create `database.py`** inside `backend/app/`:


6. **Create `main.py`** inside `backend/app/`:


7. **Run FastAPI**:

   uvicorn app.main:app --reload

   * Your API should now be available at: `http://127.0.0.1:8000/`
   * Test it in browser or Postman; you should see:

     ```json
     {"message": "PPE Compliance Monitoring System is running ðŸš€"}
     ```

---

3. React Frontend Setup

1. Open terminal/PowerShell in the **frontend folder**.
2. Install dependencies:

   npm install
   
3. Start the frontend:

   npm run dev
 

---
4. Requirements (`requirements.txt`)

absl-py==2.1.0
alembic==1.14.1
altgraph==0.17.4
annotated-types==0.7.0
anyio==4.5.2
astunparse==1.6.3
auto-py-to-exe==2.45.0
bottle==0.13.2
bottle-websocket==0.2.9
cachetools==5.5.0
certifi==2024.8.30
cffi==1.17.1
charset-normalizer==3.3.2
click==8.1.8
colorama==0.4.6
contourpy==1.1.1
cycler==0.12.1
Eel==0.18.1
exceptiongroup==1.3.0
fastapi==0.118.0
flatbuffers==24.3.25
fonttools==4.48.1
future==1.0.0
gast==0.4.0
gevent==24.2.1
gevent-websocket==0.10.1
google-auth==2.34.0
google-auth-oauthlib==1.0.0
google-pasta==0.2.0
greenlet==3.1.1
grpcio==1.66.1
h11==0.16.0
h5py==3.11.0
idna==3.10
importlib-resources==6.1.1
importlib_metadata==8.5.0
Keras-Preprocessing==1.1.2
kiwisolver==1.4.5
libclang==18.1.1
Mako==1.3.10
Markdown==3.7
MarkupSafe==2.1.5
matplotlib==3.7.4
numpy==1.24.3
oauthlib==3.2.2
opencv-python==4.10.0.84
opt-einsum==3.3.0
packaging==23.2
pefile==2023.2.7
pillow==10.2.0
psycopg2-binary==2.9.10
pyasn1==0.6.1
pyasn1_modules==0.4.1
pycparser==2.22
pydantic==2.10.6
pydantic_core==2.27.2
pygame==2.5.2
pyinstaller==6.11.1
pyinstaller-hooks-contrib==2024.10
pyparsing==3.1.1
python-dateutil==2.8.2
pywin32-ctypes==0.2.3
requests==2.32.3
requests-oauthlib==2.0.0
rsa==4.9
six==1.16.0
sniffio==1.3.1
SQLAlchemy==2.0.43
starlette==0.44.0
teachable-machine==1.2.1
tensorboard-data-server==0.7.2
tensorboard-plugin-wit==1.8.1
tensorflow-io-gcs-filesystem==0.31.0
termcolor==2.4.0
typing_extensions==4.13.2
urllib3==2.2.3
uvicorn==0.33.0
Werkzeug==3.0.4
wrapt==1.16.0
zipp==3.20.2
zope.event==5.0
zope.interface==7.2
```

---

## 6. How to Verify Connection

1. Start **PostgreSQL** and **FastAPI backend**.
2. Start **React frontend**.
3. Open your frontend in browser.
4. Check console/network tab:

   * You should see the backend response:

     ```json
     {"message":"PPE Compliance Monitoring System is running ðŸš€"}
     ```
5. If it says **Cannot connect to backend **, check:

   * Backend is running on `127.0.0.1:8000`
   * React fetch URL points to the same address (`http://127.0.0.1:8000/`)

---

This setup ensures that someone cloning your repo can:

* Install dependencies
* Create and connect the PostgreSQL database
* Run FastAPI backend
* Run React frontend
* Test the connection between frontend and backend

---

